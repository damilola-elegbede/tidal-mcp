[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tidal-mcp"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server for interacting with Tidal music streaming service"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
authors = [
    {name = "Tidal MCP Team"}
]
keywords = [
    "tidal",
    "music",
    "streaming",
    "mcp",
    "model-context-protocol",
    "api",
    "async"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Typing :: Typed"
]
dependencies = [
    "aiohttp>=3.8.0",
    "tidalapi>=0.7.0",
    "fastmcp>=0.1.0",
    "asyncio-throttle>=1.0.0",
    "cryptography>=3.4.0",
    "python-dotenv>=0.19.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.3.0",
    "coverage>=7.2.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "responses>=0.23.0",
    "aioresponses>=0.7.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "responses>=0.23.0",
    "aioresponses>=0.7.0"
]

[project.scripts]
tidal-mcp = "tidal_mcp.server:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.3.0",
    "coverage>=7.2.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "responses>=0.23.0",
    "aioresponses>=0.7.0"
]

[project.urls]
Homepage = "https://github.com/tidal-mcp/tidal-mcp"
Documentation = "https://github.com/tidal-mcp/tidal-mcp#readme"
Repository = "https://github.com/tidal-mcp/tidal-mcp.git"
Issues = "https://github.com/tidal-mcp/tidal-mcp/issues"
Changelog = "https://github.com/tidal-mcp/tidal-mcp/releases"

[tool.hatch.version]
path = "src/tidal_mcp/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml"
]

[tool.hatch.build.targets.wheel]
packages = ["src/tidal_mcp"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tidal_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/tidal_mcp"]
omit = [
    "*/tests/*",
    "*/examples/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache"
]